# RabbitMQ configuration
# ~~~~~
rabbitmq {
  username = ${?RABBITMQ_USERNAME}
  password = ${?RABBITMQ_PASSWORD}
  host = ${?RABBITMQ_HOST}

  port = 5672
  port = ${?RABBITMQ_PORT}

  queue = "opendata"
  queue = ${?RABBITMQ_QUEUE}

  vhost = /opendata_vhost
  vhost = ${?RABBITMQ_VHOST}

  prefetch = 4
  prefetch = ${?RABBITMQ_PREFETCH}

  durable = true
  durable = ${?RABBITMQ_DURABLE}
}

# Database configuration
# ~~~~~

# mongodb.uri = "mongodb://username:password@localhost:27017/service_broker"
mongodb {
  uri = ${?MONGODB_URI}
}

# Storage
# ~~~~~

# Sync if true, async if false.
storage {
  sync = true
  sync = ${?STORAGE_SYNC}
}

# Data gathering
# ~~~~~

# File system type: local or swift
gatherer {
  fs = "local"
  fs = ${?GATHERER_FS}

  index_dir = "/tmp/opendata/index"
  index_dir = ${?GATHERER_INDEX_DIR}
}

# ~~~ (local)
local {
  storage = "/tmp/opendata/storage"
  storage = ${?LOCAL_STORAGE_DIR}

  container_dir = "opendata"
  container_dir = ${?LOCAL_CONTAINER_DIR}

  storage_url = "http://localhost:9000"
  storage_url = ${?LOCAL_STORAGE_URL}
}

# ~~~ (swift)

# opendata or any suitable name
swift {
  container_name = ${?SWIFT_CONTAINER}

  user = ${?SWIFT_USER}

  password = ${?SWIFT_PASSWORD}

  project_id = ${?SWIFT_PROJECT_ID}

  # default
  domain_name = ${?SWIFT_DOMAIN_NAME}

  # http://keystone.example.com:5000/v3
  endpoint = ${?SWIFT_KEYSTONE_ENDPOINT}

  # http://swift.example.com:8080/v1/AUTH_
  swift_endpoint = ${?SWIFT_ENDPOINT}
}

tests {
  target_fs = "local"
  target_fs = ${?TEST_TARGET_FS}
}
